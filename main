from ping3 import ping
from time import time

def find_median(lst):
    if not lst:
        return None
    sorted_list = sorted(lst)
    mid_idx = (len(sorted_list) - 1) // 2
    
    if len(sorted_list) % 2 == 0:
        return (sorted_list[mid_idx] + sorted_list[mid_idx + 1]) / 2.0
    else:
        return sorted_list[mid_idx]

hosts = [
		'147.45.126.16',
		'138.124.92.68',
		]

total_start = time()

result = {}
res_no_pass = 0

for ip in hosts:
    print(f"host#{ip}")
    
    total_time = 0
    temp_lst_for_med = []
    count_error = 0
    
    
    for attempt in range(1, 501):
        response = ping(ip, timeout=1, unit='ms')
        
        if response is False or response is None:
            count_error += 1
            if count_error == 10:
                break
        else:
            temp_lst_for_med.append(response)
    
    if temp_lst_for_med and count_error < 10:
        delay = find_median(temp_lst_for_med)
        print(f"Успешных пингов: {(len(temp_lst_for_med) / 500) * 100:.2f} %")
        print(f"Медианное время: {delay:.2f} мс\n")
        
        result[ip] = delay
    else:
        res_no_pass += 1


for key, value in result.items():
    print(f"{key}: {value}")
print("\n")
print(f"IP не прошедших проверку: {res_no_pass}")
print("\n")

sorted_dict_desc = dict(sorted(result.items(), key=lambda x: x[1]))
for key, value in sorted_dict_desc.items():
    print(f"{key}: {value}")
print("\n")

total_time = time() - total_start
print(f"\nОбщее время выполнения: {total_time:.2f} секунд")


# print(f"No pass\n")
# Создаем словарь с нумерованными хостами
# hosts_dict = {idx: ip for idx, ip in enumerate(hosts, start=1)}
# print(f"count_error: {count_error}\n")
        
